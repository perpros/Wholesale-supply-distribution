[pytest]
minversion = 6.0
python_files = test_*.py
python_classes = Test*
python_functions = test_*
# Specify asyncio mode for pytest-asyncio if it's not the default.
# 'auto' mode usually works well.
asyncio_mode = auto

# It's generally recommended to manage environment variables for tests
# through conftest.py or by setting them in the test execution environment (e.g., CI script, .env.test file loaded by tests).
# Avoid hardcoding sensitive URLs directly in pytest.ini if possible.
# env =
#    APP_ENV=test
#    # Example: Overriding database URL for tests.
#    # This specific DATABASE_URL will be set in conftest.py for more control.
#    # TEST_DATABASE_URL=sqlite:///./test_override.db
#    LOG_LEVEL=DEBUG
pythonpath = .
# Adding current directory to pythonpath can help with imports if tests are run from project root.
# Ensure backend.app can be found. The sys.path.insert in conftest.py is more explicit.
markers =
    slow: marks tests as slow to run
    integration: marks integration tests
    unit: marks unit tests
# Add more markers as needed
addopts = --color=yes
# Consider adding --cov options here if using pytest-cov for coverage
# e.g. --cov=backend/app --cov-report=term-missing --cov-report=html
testpaths = tests
# Tells pytest where to look for tests
# (assuming tests are in a top-level 'tests' directory)
# If pytest is run from the project root, it will find 'tests' directory by default.
